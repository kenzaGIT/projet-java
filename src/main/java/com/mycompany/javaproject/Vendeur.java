/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.javaproject;

import java.sql.Connection;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.Date;
import java.util.LinkedList;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zaina
 */
public class Vendeur extends javax.swing.JFrame {

    /**
     * Creates new form Vendeur
     */
    public Vendeur() {
        initComponents();
        jSpinner1.setVisible(false);

        this.initCombobox();
    }

    public void limitJspinner(String targetNomP) {
        if (targetNomP != "") {

            jSpinner1.setVisible(true);
        }

        LinkedList<Produit> produits = ClasseVendeur.getProducts();

        int index = -1;

        for (int i = 0; i < produits.size(); i++) {
            if (produits.get(i).getNomP().equals(targetNomP)) {
                index = produits.get(i).quantite;

                break;
            }
        }

        if (index != -1) {
            System.out.println("Index of produit with nomP 'hello': " + index);
            jSpinner1.setModel(new javax.swing.SpinnerNumberModel(1, 1, index, 1));
        } else {
        }

    }

    public float getProductPrice(String targetNomP) {
        if (targetNomP != "") {

            jSpinner1.setVisible(true);
        }

        LinkedList<Produit> produits = ClasseVendeur.getProducts();

        float index = -1;

        for (int i = 0; i < produits.size(); i++) {
            if (produits.get(i).getNomP().equals(targetNomP)) {
                index = produits.get(i).prixU;
                break;
            }
        }

        if (index != -1) {
            return index;
        } else {
            return index;

        }

    }

    public void initCombobox() {
        jComboBox1.removeAllItems();
        LinkedList<Produit> produit = ClasseVendeur.getProducts();
        jComboBox1.addItem("");
        for (Produit produits : produit) {
            jComboBox1.addItem(produits.nomP);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        AjouterVenteButton = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Nom du produit :");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Quantit√© vendue :");

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel());
        jSpinner1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSpinner1MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setText("Vendeur");

        AjouterVenteButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        AjouterVenteButton.setText("Ajouter");
        AjouterVenteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjouterVenteButtonActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addComponent(AjouterVenteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(AjouterVenteButton)
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AjouterVenteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjouterVenteButtonActionPerformed

        Object selectedItemObject = jComboBox1.getSelectedItem();
        String selectedItem = selectedItemObject.toString();

        String nomP = selectedItem;

        int quantiteVendue = (int) jSpinner1.getValue();

        if (quantiteVendue <= 0 || nomP == "") {
            JOptionPane.showMessageDialog(this, " \"L'un des Champs est invalide\".");
            return;
        }

        try {
            Connection conn = mySQL.getConnection();
            conn.setAutoCommit(true);

            int idPValue = ClasseVendeur.retrieveIdP(nomP, conn);
            int quantiteValue = ClasseVendeur.retrieveQuantite(nomP, conn);

            if (quantiteVendue < quantiteValue) {
                String SQL = "INSERT INTO vente (idP ,quantiteVendue,dateVente,prixVente, prixU) VALUES (?, ?, ?,?,?)";
                try (PreparedStatement statement = conn.prepareStatement(SQL)) {
                    statement.setInt(1, idPValue);
                    statement.setInt(2, quantiteVendue);
                    statement.setTimestamp(3, new Timestamp(new Date().getTime()));
                    System.out.println(+getProductPrice(nomP) * +quantiteVendue);
                    statement.setFloat(4, +getProductPrice(nomP) * +quantiteVendue);
                    statement.setFloat(5, getProductPrice(nomP));

                    statement.executeUpdate();

                    SQL = "UPDATE produit SET quantite = CASE WHEN quantite>0 THEN (quantite - ?) ELSE quantite END WHERE idP = ?";
                    try (PreparedStatement updateStatement = conn.prepareStatement(SQL)) {
                        updateStatement.setInt(1, quantiteVendue);
                        updateStatement.setInt(2, idPValue);
                        updateStatement.executeUpdate();

                    }
                    // Close the resources
                    statement.close();
                    JOptionPane.showMessageDialog(this, " \"Sale added to the database successfully!\".");
                    jSpinner1.setValue(0);

                }

            } else {
                JOptionPane.showMessageDialog(this, " \"Not enough product to be sold\".");
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(this, "Error connectings to the database.");
        }
    }//GEN-LAST:event_AjouterVenteButtonActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        Object selectedItemObject = jComboBox1.getSelectedItem();
        if (selectedItemObject != null) {

            String selectedItem = selectedItemObject.toString();
            this.limitJspinner(selectedItem);
        }

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jSpinner1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSpinner1MouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_jSpinner1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vendeur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vendeur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vendeur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vendeur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vendeur().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AjouterVenteButton;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSpinner jSpinner1;
    // End of variables declaration//GEN-END:variables
}
